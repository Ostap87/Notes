=============== CUCUMBER <BEANS> ==============
Just class with variables and getter/setter
Used to represent a certain type of object:
 - Beans  
 - MOdel 
 - Pojo - plain old java objects


1. Create .feature file and run
2. Implement to stepDefinitions class
3. Create new package named "beans" and new class "User"
4. In "User" create instance filds 'private String name'
5. Create constractor and get/set methods
6. Create new class in stepDefinitions(must) named 'DataTableConfigure'
	-> class for new method in Cucumber, it help us to read dependency
	
	public class TypeRegistryConfiguration implements TypeRegistryConfigurer {
    @Override
    public Locale locale() {
        return ENGLISH;  }
    public void configureTypeRegistry(TypeRegistry typeRegistry) {
		typeRegistry.defineDataTableType(new DataTableType(User.class,
				new TableEntryTransformer<User>() {
					@Override
					public User transform(Map<String, String> row) throws Throwable {
						// these keys must match the data table in the feature file
						String firstName = row.get("First Name");
						String lastName = row.get("Last Name");
						String .......................................;
						String phone = row.get("Phone");
						return new User(firstName, lastName, phone); 
					)));}}
7. Create new class in stepDefinitions named 'UserRegistrationStep', add annotations
	
	@Given("the user enters personal information")
	public void the_user_enters_personal_information(Map<String, String> user) {
		registrationPage.firstName.sendKeys(user.get("First Name"));
		registrationPage.lastName.sendKeys(user.get("Last Name"));
























